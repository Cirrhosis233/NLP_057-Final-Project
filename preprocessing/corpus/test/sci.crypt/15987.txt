i tri code yesterday . 
on sparcstat elc take 300 second compress 22 second ' worth speech . 
this mean need optim factor 10 usabl even half-duplex mode . 
ouch ! 
thank tri . 
the follow program quick hack i creat month ago determin whether sun sparcstat ipc could perform real-tim full-duplex encrypt audio result data rate sustain today 's modem . 
this test program read linearly-encod audio audio devic compress gsm 06.10 compress frame 160 13-bit sampl record 8khz 260 bit result 50 hz frame rate encrypt des revers process send reconstruct audio back audio devic . 
the compress encrypt audio stream 13 kbitss ! . 
my sparcstat ipc exact fast machin day certain slower elc would bare sustain activ audio underrun would occcur speech intellig . 
i ran real-tim process get best result . 
rememb though program quick hack perform certain improv . 
the audio compress routin ftp 'd tub.cs.tu-berlin.d i believ look gsm toast . 
i use eric young 's des implement i longer know i got . 
cheer ! greg cut here test program see much cpu take secur digit audio . 
written sun ipc run solari 2.2 sun isdn s-bus card speakerbox . 
includ stdlib.h includ unistd.h includ fcntl.h includ stdio.h includ systypes.h includ sysaudioio.h includ stropts.h includ gsm.h includ des.h booleant svsaudioinitint fd audioinfot previnfo audioinfot info previnfo null ioctlfd audiogetinfo previnfo 0 perroraudiogetinfo return bfals audioinitinfoinfo info.record.paus btrue info.play.paus btrue info.play.sampler 8000 info.play.encod audioencodinglinear info.play.channel 1 info.play.precis 16 info.record.sampler 8000 info.record.encod audioencodinglinear info.record.channel 1 info.record.precis 16 info.record.buffers 320 4 ioctlfd audiosetinfo info 0 perroraudiosetinfo return bfals ioctlfd iflush flushrw 0 perroriflush return bfals audioinitinfoinfo info.record.paus bfals info.play.paus bfals ioctlfd audiosetinfo info 0 perroraudiosetinfo return bfals return btrue booleant svsinint ifd gsm handl gsmbyte buf gsmsignal sample160 readifd sampl sizeof sampl sizeof sampl fprintfstderr svsin short readn return bfals gsmencodehandl sampl buf return btrue booleant svsoutint ofd gsm handl gsmbyte buf gsmsignal sample160 gsmdecodehandl buf sampl 0 fprintfstderr svsout gsmdecod failedn return bfals writeofd sampl sizeof sampl sizeof sampl fprintfstderr svsout short writen return bfals return btrue main gsm handl gsmframe frame int audiofd int option descblock key ivecin ivecout deskeyschedul ksin ksout descblock cbufin4 cbufout4 cbufbuf4 audiofd opendevaudio ordwr audiofd 0 perroropen exit4 initi gsm compress code handl gsmcreat null fprintfstderr svs gsmcreat failedn exit4 option btrue gsmoptionhandl gsmoptfast option 0 fprintfstderr svs gsmoption fast failedn exit4 initi des code desrandomkeykey dessetkeykey ksin 0 fprintfstderr svs dessetkey failedn exit4 dessetkeykey ksout 0 fprintfstderr svs dessetkey failedn exit4 memsetivecin 0 sizeof ivecin memsetivecout 0 sizeof ivecout open audio devic configur ! svsaudioinitaudiofd null exit3 get 160 sampl 16-bit linear 8000hz convert 33 byte frame ! svsinaudiofd handl frame exit1 encryptdecrypt block descbcencryptfram cbufout long32 ksin ivecin desencrypt descbcencryptcbufout cbufbuf long32 ksout ivecout desdecrypt memmovefram cbufbuf 32 0 memcmpcbufin cbufbuf 32 0 fprintfstderr svs memcmp failedn exit4 endif take 33 byte frame convert 160 sampl play ! svsoutaudiofd handl frame exit2 
